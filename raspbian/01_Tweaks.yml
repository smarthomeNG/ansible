---
- name: Tweaks
  hosts: image
  remote_user: root
  become_user: root
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    packages:
      ["tcpdump",
      "screen",
      "dos2unix",
      "telnet",
      "unattended-upgrades",
      "apt-listchanges",
      "atop",
      "iotop",
      "libbison-dev",
      "libfl-dev",
      "libgcrypt20-dev",
      "libgpg-error-dev",
      "libaio-dev",
      "git-core",
      "build-essential",
      "debhelper",
      "autoconf",
      "libtool",
      "libusb-1.0-0-dev",
      "pkg-config",
      "libsystemd-dev",
      "libev-dev",
      "cmake",
      "mlocate",
      "snmpd",
      "snmp-mibs-downloader",
      "snmp",
      "rsyslog",
      "netcat-openbsd",
      "fake-hwclock",
      "libudev-dev",
      "libkrb5-dev",
      "powermgmt-base", # for automatic updates (wants to check if battery mode is active)
      "scdaemon", #GnuPG
      "libgirepository1.0-dev", # for python PygObject
      "libglib2.0-dev", # for python PygObject
      "libcairo2-dev", # for python PygObject
      "libsqlite3-dev" # for python sqlite3
      ]


  tasks:
  - name: Create sh Group
    group:
      name: smarthome
      state: present

  - name: Create sh User
    user:
      name: smarthome
      shell: /bin/bash
      groups: smarthome
      append: no
      update_password: always
      password: ""
      comment: 'SmarthomeNG User'

  - name: Add groups
    user:
      name: smarthome
      groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout, root, tty, users
      append: yes

  - name: Update release
    shell: apt-get update --allow-releaseinfo-change

  - name: Update Cache
    apt: update_cache=yes

  - name: Safe apt upgrade
    apt: upgrade=safe

  - name: Upgrade Dist
    apt: upgrade=dist
    register: apt
  - debug: var=apt

  - name: install apt
    apt:
      name: "{{ item }}"
      state: latest
    with_items: "{{ packages }}"

  - name: remove pulseaudio
    apt:
      name: "pulseaudio*"
      state: absent
      purge: yes

  - name: apt autoremove
    apt: autoremove=yes

  - name: set timezone to Central Europe
    timezone:
      name: Europe/Vienna

  - name: install english locale
    locale_gen:
      name: en_GB.UTF-8
      state: present

  - name: install german locale
    locale_gen:
      name: de_DE.UTF-8
      state: present

  - name: Set locale
    command: 'update-locale LANG=de_DE.UTF-8 LC_ALL=de_DE.UTF-8'

  - name: keyboard
    replace:
      destfile: /etc/default/keyboard
      regexp: '"gb"'
      replace: '"de"'
    ignore_errors: yes

  - name: wpasupplicant
    copy:
      src: configs/wpa_supplicant.conf
      dest: /etc/wpa_supplicant/wpa_supplicant.conf
      mode: 0644
      owner: root
      group: root

  - name: sap
    replace:
      destfile: /lib/systemd/system/bluetooth.service
      regexp: 'ExecStart=/usr/lib/bluetooth/bluetoothd'
      replace: 'ExecStart=/usr/lib/bluetooth/bluetoothd --noplugin=sap'
    ignore_errors: yes

  - name: tweak journal
    blockinfile:
      path: /etc/systemd/journald.conf
      block: |
            SystemMaxUse=500M
            MaxFileSec=7day

  - name: tweak screen
    blockinfile:
      path: /etc/screenrc
      block: |
            termcapinfo xterm* ti@:te@
            startup_message off
            shell -/bin/bash

  - name: adjust timeout
    blockinfile:
      path: /etc/systemd/system.conf
      block: |
            DefaultTimeoutStartSec=150s
            DefaultTimeoutStopSec=150s

  - name: Make ssh dir
    file:
      path: /home/pi/.ssh
      state: directory
      owner: pi
      group: pi
      mode: 0600

  - name: tweak ssh
    blockinfile:
      path: /etc/ssh/ssh_config
      block: |
            ServerAliveInterval 240
            ControlMaster auto
            ControlPath ~/.ssh/ssh_mux_%h_%p_%r
            ControlPersist 448h

  - name: Make ssh root dir
    file:
      path: /root/.ssh
      state: directory
      owner: root
      group: root
      mode: 0600

  - name: Permit empty ssh
    replace:
      destfile: /etc/ssh/sshd_config
      regexp: "^#PermitEmptyPasswords no"
      replace: "PermitEmptyPasswords yes"
    ignore_errors: yes

  - name: Permit root ssh
    replace:
      destfile: /etc/ssh/sshd_config
      regexp: "^#PermitRootLogin(.*)"
      replace: "PermitRootLogin yes"
    ignore_errors: yes

  - name: sshd deprecated env warning
    replace:
      destfile: /etc/pam.d/sshd
      regexp: " user_readenv=1"
      replace: ""
    ignore_errors: yes

  - name: getty AMA
    systemd: masked=yes name=serial-getty@ttyAMA0.service
    ignore_errors: yes

  - name: getty S0
    systemd: masked=yes name=serial-getty@ttyS0.service
    ignore_errors: yes

  - name: Enable rsyslog
    systemd: enabled=yes name=rsyslog.service

  - name: Enable sshd
    systemd: enabled=yes name=ssh.service

  - name: Restart sshd
    systemd: daemon_reload=yes state=restarted name=ssh

  - name: Enable network online
    systemd: enabled=yes name=systemd-networkd-wait-online.service

  - name: Pi dialout
    user:
      name: pi
      groups: sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
      append: yes

  - name: cmdline tty
    replace:
      destfile: /boot/firmware/cmdline.txt
      regexp: "console=serial0,115200 "
      replace: ""
    ignore_errors: yes

  - name: triggerhappy
    replace:
      destfile: /lib/udev/rules.d/60-triggerhappy.rules
      regexp: '^(\s+)RUN\+\=(.*)$'
      replace: '\1RUN+="/bin/systemctl restart triggerhappy"'
    ignore_errors: yes

  - name: Test for entry
    command: 'grep "rootdelay=5 consoleblank=0 cgroup_memory=1 cgroup_enable=memory" /boot/firmware/cmdline.txt'
    register: test_grep1
    ignore_errors: yes

  - name: cmdline add
    lineinfile:
      path: /boot/firmware/cmdline.txt
      backrefs: True
      state: present
      regexp: '(.*)$'
      line: '\1 rootdelay=5 consoleblank=0 cgroup_memory=1 cgroup_enable=memory'
    when: test_grep1.stdout == ""

  - name: edit config
    blockinfile:
      path: /boot/firmware/config.txt
      block: |
        #hdmi_safe=1
        disable_overscan=1
        hdmi_force_hotplug=1
        #hdmi_drive=2
        config_hdmi_boost=4
        #sdtv_mode=2
        dtoverlay=gpio-ir,gpio_pin=18
        dtoverlay=gpio-ir-tx,gpio_pin=17
        enable_uart=1
        #dtparam=watchdog=on

  - name: Test for entry
    shell: grep "^i2c-bcm2708" /etc/modules | cat
    register: test_grep2
    ignore_errors: yes

  - name: Modules bcm
    lineinfile:
      path: /etc/modules
      insertafter: EOF
      line: 'i2c-bcm2708'
    when: test_grep2.stdout == ""

  - name: udev tty
    blockinfile:
      path: /etc/udev/rules.d/99-dev.rules
      create: yes
      mode: 0644
      owner: root
      group: root
      block: |
        KERNEL=="ttyS0", OWNER="root", GROUP="dialout", MODE="0660"

  - name: cronjob_udev
    cron:
      name: udev
      user: root
      special_time: reboot
      job: 'udevadm trigger'
      cron_file: udev

  - name: journald_timecheck add shell
    cron:
      name: SHELL
      env: yes
      job: /bin/bash
      user: root
      cron_file: journald_timecheck

  - name: journald_timecheck add path
    cron:
      name: PATH
      env: yes
      job: /bin:/sbin:/usr/bin:/usr/sbin
      insertafter: SHELL
      user: root
      cron_file: journald_timecheck

  - name: journald_timecheck add time check for journalctl to find out problems with journalctl performance/cache
    cron:
      name: journald_timecheck
      user: root
      special_time: daily
      job: 'echo $(date +"\%b \%02d \%X") "INFO Time for journalctl was" $({ time -p journalctl -b --no-pager > /dev/null ; } 2>&1 | grep real) >> /var/log/syslog'
      cron_file: journald_timecheck

  - name: Make ssh dir
    file:
      path: /home/smarthome/.ssh
      state: directory
      owner: smarthome
      group: smarthome
      mode: 0700

  - name: ssh warning
    file:
      path: /etc/profile.d/sshpwd.sh
      state: absent

  - name: restart fakehwclock
    systemd: state=restarted name=fake-hwclock.service

  - name: rsyslog
    copy:
      src: configs/rsyslog.conf
      dest: /etc/rsyslog.conf
      mode: 0755
      owner: smarthome
      group: smarthome

  - name: hostname public
    command: 'hostnamectl set-hostname SmartHomeNG'
    ignore_errors: yes

  - name: hosts public
    replace:
      destfile: /etc/hosts
      regexp: "^127.0.[0-1].1(.*)raspberrypi"
      replace: "127.0.1.1\tSmartHomeNG"
    ignore_errors: yes

  - name: Colorize
    copy:
      src: executables/mycolorize-r.sh
      dest: /usr/local/bin/colorize
      mode: 0777
      owner: smarthome
      group: root

  - name: Copy colorbash
    copy:
      src: executables/colorbash.sh
      dest: /etc/profile.d/
      owner: smarthome
      group: root
      mode: 0777

  - name: Copy tweakbash
    copy:
      src: executables/tweakbash.sh
      dest: /etc/profile.d/
      owner: smarthome
      group: root
      mode: 0777

  - name: unalias ls pi
    replace:
      destfile: /home/pi/.bashrc
      regexp: "^\\s*[^#]alias ls='ls --color=auto'"
      replace: "#alias ls='ls --color=auto'"
    ignore_errors: yes
  - name: unalias egrep pi
    replace:
      destfile: /home/pi/.bashrc
      regexp: "^\\s*[^#]alias egrep='egrep --color=auto'"
      replace: "#alias egrep='egrep --color=auto'"
    ignore_errors: yes

  - name: unalias ls sh
    replace:
      destfile: /home/smarthome/.bashrc
      regexp: "^\\s*[^#]alias ls='ls --color=auto'"
      replace: "#alias ls='ls --color=auto'"
    ignore_errors: yes
  - name: unalias egrep sh
    replace:
      destfile: /home/smarthome/.bashrc
      regexp: "^\\s*[^#]alias egrep='egrep --color=auto'"
      replace: "#alias egrep='egrep --color=auto'"
    ignore_errors: yes

  - name: comment PS1 sh
    replace:
      destfile: /home/smarthome/.bashrc
      regexp: "^\\s*[^#]PS1="
      replace: ": #PS1="
    ignore_errors: yes

  - name: comment PS1 pi
    replace:
      destfile: /home/pi/.bashrc
      regexp: "^\\s*[^#]PS1="
      replace: ": #PS1="
    ignore_errors: yes

  - name: sudoers
    lineinfile:
      path: /etc/sudoers.d/010_smarthome-nopasswd
      create: yes
      line: 'smarthome ALL=(ALL) NOPASSWD: ALL'

  - name: Copy cleanbash
    copy:
      src: executables/cleanbash.sh
      dest: /usr/local/bin/
      mode: 0777
      owner: smarthome
      group: smarthome

  - name: Copy logrotate
    copy:
      src: configs/logrotate.conf
      dest: /etc/
      mode: 0644
      owner: root
      group: root

  - name: disable systemslice
    blockinfile:
      path: /etc/rsyslog.d/ignore-systemd-session-slice.conf
      create: yes
      block: |
        if $programname startswith "systemd" and ($msg contains "Starting Session" or $msg contains "Started Session" or $msg contains "session closed" or $msg contains "session opened" or $msg contains "Created slice" or $msg contains "Starting user-" or $msg contains "Starting User Slice of" or $msg contains "Startup" or $msg contains "Removed session" or $msg contains "New session" or $msg contains "Removed slice " or $msg contains "Stopping User Slice of" or $msg contains "dwc_otg_handle_mode_mismatch_intr") then stop

  - name: disable vc4-drm log
    blockinfile:
      path: /etc/rsyslog.d/ignore-vc4-drm.conf
      create: yes
      block: |
        if $programname startswith "kernel" and ($msg contains "vc4-drm gpu" or $msg contains "drm:drm_client_modeset_probe" or $msg contains "drm:drm_mode_prune_invalid" or $msg contains "drm:drm_helper_probe_single_connector_modes" or $msg contains "drm:update_display_info" or $msg contains "drm:_drm_edid_connector_update" or $msg contains "drm:drm_mode_debug_printmodeline" or $msg contains "drm:drm_atomic_normalize_zpos" or $msg contains "switching to colour frame buffer device") then stop

  - name: logrotate
    lineinfile:
      path: /etc/logrotate.d/rsyslog
      insertbefore: BOF
      line: /var/log/dpkg.log

  - name: systemd-timesyncd
    systemd: enabled=yes name=systemd-timesyncd.service

  - name: debdir
    file: path=/etc/deb-files/ state=directory mode=0755

  - name: install checkinstall
    apt:
      name=checkinstall force=yes state=latest install_recommends=no

  - name: copy conf
    copy:
      src: configs/checkinstallrc
      dest: /usr/local/lib/checkinstall/
      mode: 0644
      owner: root

  - name: enable_fake-hwclock
    systemd: enabled=yes name=fake-hwclock.service

  - name: rngd logfile
    blockinfile:
      path: "/etc/rsyslog.d/rngd.conf"
      create: yes
      block: |
        template(name="FileFormat_timestamp" type="string" string= "%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
        if $programname == 'rngd' then {
          action(type="omfile" file="/var/log/rng.log" template="FileFormat_timestamp")
          stop
        }
    ignore_errors: yes

  - name: create systemd dir bluetooth
    file:
      path: /etc/systemd/system/bluetooth.service.d/
      state: directory

  - name: Copy service_conf bluetooth
    copy:
      src: configs/service_bluetooth_fix.conf
      dest: /etc/systemd/system/bluetooth.service.d/
      owner: root
      group: adm
      mode: 0644

  - name: create systemd dir snmpd
    file:
      path: /etc/systemd/system/snmpd.service.d/
      state: directory

  - name: Copy service_conf snmpd
    copy:
      src: configs/service_snmpd_fix.conf
      dest: /etc/systemd/system/snmpd.service.d/
      owner: root
      group: adm
      mode: 0644

  - name: fix snmpd1
    replace:
      destfile: /etc/default/snmpd
      regexp: "export MIBS="
      replace: "#export MIBS="
    ignore_errors: yes

  - name: fix snmpd2
    replace:
      destfile: /etc/default/snmpd
      regexp: "-smux,mteTrigger,mteTriggerConf"
      replace: "-smux"
    ignore_errors: yes

  - name: fix snmpd3
    replace:
      destfile: /etc/snmp/snmp.conf
      regexp: "^mibs"
      replace: "#mibs"
    ignore_errors: yes

  - name: Install snmp_mibs
    apt: name=snmp-mibs-downloader force=no state=latest

  - name: snmp logfile
    blockinfile:
      path: "/etc/rsyslog.d/snmp.conf"
      create: yes
      block: |
        template(name="FileFormat_timestamp" type="string" string= "%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
        if $programname == 'snmpd' then {
          action(type="omfile" file="/var/log/snmp.log" template="FileFormat_timestamp" FileCreateMode="0644" FileGroup="adm")
          stop
        }
    ignore_errors: yes

  - name: rsyslog restart
    systemd: state=restarted name=rsyslog.service
    ignore_errors: yes

  - name: Country Wifi
    shell: iw reg set DE

  - name: Unblock Wifi
    shell: rfkill unblock 0
    ignore_errors: yes

  - name: updatescript
    copy:
      src: executables/system_update.sh
      dest: /opt/system_update
      mode: 0775
      owner: smarthome
      group: smarthome

  - name: upgrades logfile
    blockinfile:
      path: "/etc/rsyslog.d/unattendedupgrades.conf"
      create: yes
      block: |
        template(name="FileFormat_timestamp" type="string" string= "%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
        if $programname == 'unattended-upgrade' then {
          action(type="omfile" file="/var/log/unattended-upgrades.log" template="FileFormat_timestamp" FileCreateMode="0644" FileGroup="adm" FileOwner="smarthome")
          stop
        }
    ignore_errors: yes

  - name: unattended_config
    blockinfile:
      path: "/etc/apt/apt.conf.d/50unattended-upgrades"
      create: yes
      insertafter: "Unattended-Upgrade::Origins-Pattern {"
      block: |
        "o=Debian,n=${distro_codename}";
        "o=Raspbian,n=${distro_codename}";
        "origin=Raspbian,codename=${distro_codename},label=Raspbian";
        "origin=Raspberry Pi Foundation,codename=${distro_codename},label=Raspberry Pi Foundation";

  - name: unattended_config2
    blockinfile:
      path: "/etc/apt/apt.conf.d/20auto-upgrades"
      create: yes
      block: |
        APT::Periodic::Download-Upgradeable-Packages "0";
        APT::Periodic::AutocleanInterval "7";

  - name: unattended_config3
    replace:
      destfile: /etc/apt/apt.conf.d/20auto-upgrades
      regexp: '"1"'
      replace: '"0"'
    ignore_errors: yes

  - name: unattended_config_mail1
    replace:
      destfile: /etc/apt/apt.conf.d/50unattended-upgrades
      regexp: '^//Unattended-Upgrade::Mail "";'
      replace: 'Unattended-Upgrade::Mail "root";'
    ignore_errors: yes

  - name: unattended_config_mail2
    replace:
      destfile: /etc/apt/apt.conf.d/50unattended-upgrades
      regexp: '^//Unattended-Upgrade::MailReport "on-change";'
      replace: 'Unattended-Upgrade::MailReport "only-on-error";'
    ignore_errors: yes

  - name: unattended_config_removedeps
    replace:
      destfile: /etc/apt/apt.conf.d/50unattended-upgrades
      regexp: '^//Unattended-Upgrade::Remove-Unused-Dependencies "false";'
      replace: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";'
    ignore_errors: yes

  - name: unattended_config_syslog
    replace:
      destfile: /etc/apt/apt.conf.d/50unattended-upgrades
      regexp: '^// Unattended-Upgrade::SyslogEnable "false";'
      replace: 'Unattended-Upgrade::SyslogEnable "true";'
    ignore_errors: yes

  - name: create systemd dir unattendedupgrades
    file:
      path: /etc/systemd/system/unattended-upgrades.service.d/
      state: directory

  - name: Copy service_conf unattendedupgrades
    copy:
      src: configs/service_unattendedupgrades_fix.conf
      dest: /etc/systemd/system/unattended-upgrades.service.d/
      owner: root
      group: adm
      mode: 0644

  - name: logrotate
    lineinfile:
      path: /etc/logrotate.d/rsyslog
      regexp: 'compress'
      state: absent

  - name: logrotate btmp
    replace:
      destfile: /etc/logrotate.d/btmp
      regexp: 'utmp'
      replace: adm

  - name: logrotate daily
    replace:
      destfile: /etc/logrotate.d/rsyslog
      regexp: 'weekly'
      replace: daily

  - name: logrotate_unattended
    copy:
      src: configs/logrotate_upgrades
      dest: /etc/logrotate.d/unattended-upgrades
      mode: 0644

  - name: avahi
    replace:
      destfile: /etc/avahi/avahi-daemon.conf
      regexp: '#disallow-other-stacks=no'
      replace: 'disallow-other-stacks=yes'
    ignore_errors: yes

  - name: Swap
    replace:
      destfile: /etc/dphys-swapfile
      regexp: "^CONF_SWAPSIZE="
      replace: "CONF_SWAPSIZE="
    ignore_errors: yes

#  - name: Restartswap
#    systemd: state=restarted name=dphys-swapfile

  - name: Swapoff
    command: 'dphys-swapfile swapoff'

  - name: Swapdisable
    systemd: enabled=no name=dphys-swapfile

  - name: delete swap
    file:
      path: /var/swap
      state: absent
