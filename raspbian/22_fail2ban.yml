---
- name: fail2ban
  hosts: image
  remote_user: root
  become_user: root
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    packages:
      ["fail2ban",
      "whois"
      ]

  tasks:
  - name: install apt
    apt:
      name: "{{ item }}"
      state: latest
      install_recommends: no
    with_items: "{{ packages }}"

  - name: copy_jail
    copy:
      dest: /etc/fail2ban/jail.local
      src: configs/fail2ban_jail.conf

  - name: copy_https
    copy:
      dest: /etc/fail2ban/filter.d/nginx-https-auth.conf
      src: configs/fail2ban_https.conf

  - name: copy_404
    copy:
      dest: /etc/fail2ban/filter.d/nginx-http-404.conf
      src: configs/fail2ban_http_404.conf

  - name: copy_http
    copy:
      dest: /etc/fail2ban/filter.d/nginx-http-auth2.conf
      src: configs/fail2ban_http_2.conf

  - name: update_auth
    lineinfile:
      path: /etc/fail2ban/filter.d/nginx-http-auth.conf
      insertafter: 'password mismatch'
      line: '^ \[error\] \d+#\d+: \*\d+ no user/password was provided for basic authentication, client: <HOST>, server: \S+, request: "\S+ \S+ HTTP/\d+\.\d+", host: "\S+"\s*$'

  - name: update service
    replace:
      destfile: /lib/systemd/system/fail2ban.service
      regexp: '^PIDFile=/var/run/fail2ban/fail2ban.pid'
      replace: 'PIDFile=/run/fail2ban/fail2ban.pid'
    ignore_errors: yes

  - name: update service2
    replace:
      destfile: /lib/systemd/system/fail2ban.service
      regexp: '^ExecStartPre=/bin/mkdir -p /var/run/fail2ban'
      replace: 'ExecStartPre=/bin/mkdir -p /run/fail2ban'
    ignore_errors: yes

  - name: link_badbots
    file:
      dest: /etc/fail2ban/filter.d/nginx-badbots.conf
      src: /etc/fail2ban/filter.d/apache-badbots.conf
      state: link

  - name: Change logtarget
    replace:
      destfile: /etc/fail2ban/fail2ban.conf
      regexp: "logtarget = (.*)"
      replace: 'logtarget = sysout[format="%%(levelname)-7s %%(message)s"]'

  - name: logfile
    blockinfile:
      path: "/etc/rsyslog.d/fail2ban.conf"
      create: yes
      block: |
        template(name="fail2ban_timestamp" type="string" string= "%TIMESTAMP% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n")
        if $programname startswith 'fail2ban' then {
          action(type="omfile" file="/var/log/fail2ban.log" template="fail2ban_timestamp" FileCreateMode="0644" FileGroup="adm")
          stop
        }
    ignore_errors: yes

  - name: copy_nohome
    copy:
      dest: /etc/fail2ban/filter.d/nginx-nohome.conf
      src: configs/fail2ban_nohome.conf

  - name: copy_noproxy
    copy:
      dest: /etc/fail2ban/filter.d/nginx-noproxy.conf
      src: configs/fail2ban_noproxy.conf

  - name: copy_fail2ban_script
    copy:
      dest: /opt/fail2ban_reset.sh
      src: executables/fail2ban_reset.sh
      mode: 0777

  - name: copy_fail2ban_script2
    copy:
      dest: /opt/fail2ban_gracetime.sh
      src: executables/fail2ban_gracetime.sh
      mode: 0777

  - name: copy_fail2ban_mail
    copy:
      dest: /etc/fail2ban/action.d/mail-whois-lines.conf
      src: configs/fail2ban_mail.conf
      mode: 0777

  - name: copy_fail2ban_sendmail
    copy:
      dest: /etc/fail2ban/action.d/sendmail-whois-lines.conf
      src: configs/fail2ban_sendmail.conf
      mode: 0777

  - name: Restart fail2ban
    systemd: state=restarted name=fail2ban

  - name: disable fail2ban
    systemd: enabled=no name=fail2ban

  - name: Copy logrotate
    copy:
      src: configs/logrotate_fail2ban
      dest: /etc/logrotate.d/fail2ban
      mode: 0644

  - name: fix tmpfiles folder
    replace:
      destfile: /usr/lib/tmpfiles.d/fail2ban-tmpfiles.conf
      regexp: '/var/run/'
      replace: '/run/'
    ignore_errors: yes
