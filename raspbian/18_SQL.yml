---
- name: Install SQL
  hosts: image
  remote_user: root
  become_user: root
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
  - name: Create Group
    group:
      name: smarthome
      state: present

  - name: Create User
    user:
      name: smarthome
      shell: /bin/bash
      groups: smarthome
      append: no
      update_password: always
      password: ""
      comment: 'SmarthomeNG User'

  - name: Groups
    user:
      name: smarthome
      shell: /bin/bash
      groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
      append: yes

  - name: Install mysql server
    apt: name=mariadb-server force=no state=latest install_recommends=yes update_cache=yes

  - name: Install mysql client
    apt: name=mariadb-client force=no state=latest install_recommends=yes
    ignore_errors: yes

  - name: Restart sql
    systemd: state=restarted name=mysql

  - name: mysql init
    blockinfile:
      path: "/root/mysqlinit"
      create: yes
      block: |
        DELETE FROM user WHERE USER = 'root' AND HOST = 'localhost';
        CREATE USER 'root'@'%' IDENTIFIED BY 'smarthome';
        GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
        CREATE DATABASE smarthome;
        CREATE USER 'smarthome'@'localhost' IDENTIFIED BY 'smarthome';
        GRANT ALL PRIVILEGES ON smarthome.* TO 'smarthome'@'localhost' WITH GRANT OPTION;
        CREATE USER 'smarthome'@'%' IDENTIFIED BY 'smarthome';
        GRANT ALL PRIVILEGES ON smarthome.* TO 'smarthome'@'%' WITH GRANT OPTION;
        FLUSH PRIVILEGES;
    ignore_errors: yes

  - name: mysql smarthome
    shell: "mysql -uroot -proot mysql < /root/mysqlinit"
    register: init
    ignore_errors: yes

  - name: Install phpmyadmin
    apt:
      name: phpmyadmin
      state: latest


  - name: rights
    file:
      dest: /var/lib/mysql
      owner: mysql
      group: mysql
      mode: 0770
      recurse: yes
      state: directory

  - name: Nodelay logrotate
    replace:
      destfile: /etc/logrotate.d/mariadb
      regexp: "^compress"
      replace: "#compress"

  - name: Nodelay logrotate
    replace:
      destfile: /etc/logrotate.d/mariadb
      regexp: "^delaycompress"
      replace: "#delaycompress"

  - name: lib_logrotate1
    replace:
      destfile: /etc/logrotate.d/mariadb
      regexp: "/var/lib/mysql/mysqld.log"
      replace: ""

  - name: lib_logrotate2
    replace:
      destfile: /etc/logrotate.d/mariadb
      regexp: "/var/lib/mysql/mariadb.log"
      replace: ""

  - name: tweak logrotate
    blockinfile:
      path: /etc/logrotate.d/mariadb
      create: no
      insertafter: missingok
      block: |
        notifempty
        dateext
        dateformat .%Y-%m-%d.log

  - name: conf
    copy:
      src: configs/mysql.cnf
      dest: /etc/mysql/debian.cnf
      owner: mysql
      group: mysql
      mode: 0644

  - name: link conf
    file:
      src: /etc/mysql/debian.cnf
      dest: /etc/mysql/conf.d/debian.cnf
      owner: mysql
      group: mysql
      state: link

  - name: unbind
    replace:
      destfile: /etc/mysql/mariadb.conf.d/50-server.cnf
      regexp: "^bind-address"
      replace: "#bind-address"
    ignore_errors: yes

  - name: syslog
    replace:
      destfile: /etc/mysql/mariadb.conf.d/50-server.cnf
      regexp: "^log_error = /var/log/mysql/error.log"
      replace: "#log_error = /var/log/mysql/error.log"
    ignore_errors: yes

  - name: logfile
    blockinfile:
      path: "/etc/rsyslog.d/mysql.conf"
      create: yes
      block: |
        $Template FileFormat_start,"%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
        $Template FileFormat_sql,"%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:R,ERE,3,FIELD:(([0-9]{4}-[0-9]{2}-[0-9]{2}\s+[:0-9]{7,8}\s+[:0-9]{1}\s+\[Note\]\s+)(.*))--end:sp-if-no-1st-sp%%msg:R,ERE,3,FIELD:(([0-9]{4}-[0-9]{2}-[0-9]{2}\s+[:0-9]{7,8}\s+[:0-9]{1}\s+\[Note\]\s+)(.*))--end:drop-last-lf%\n"
        $Template FileFormat_sql_warning,"%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:R,ERE,3,FIELD:(([0-9]{4}-[0-9]{2}-[0-9]{2}\s+[:0-9]{7,8}\s+[:0-9]{1}\s+\[Warning\]\s+)(.*))--end:sp-if-no-1st-sp%%msg:R,ERE,3,FIELD:(([0-9]{4}-[0-9]{2}-[0-9]{2}\s+[:0-9]{7,8}\s+[:0-9]{1}\s+\[Warning\]\s+)(.*))--end:drop-last-lf%\n"
        $Template FileFormat_sql_error,"%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text%%msg:R,ERE,3,FIELD:(([0-9]{4}-[0-9]{2}-[0-9]{2}\s+[:0-9]{7,8}\s+[:0-9]{1}\s+\[Error\]\s+)(.*))--end:sp-if-no-1st-sp%%msg:R,ERE,3,FIELD:(([0-9]{4}-[0-9]{2}-[0-9]{2}\s+[:0-9]{7,8}\s+[:0-9]{1}\s+\[Error\]\s+)(.*))--end:drop-last-lf%\n"
        if ($programname contains 'mysql' or $programname contains 'mariadb') and ($msg contains_i 'shutdown' or $msg contains_i 'Shutdown') then {
          action(type="omfile" file="/var/log/mysql/error.log" template="FileFormat_sql" FileCreateMode="0644" FileGroup="adm")
          stop
        }
        if ($programname contains 'mysql' or $programname contains 'mariadb') and $syslogseverity-text != 'error' and $msg contains_i '[Note]' then {
          action(type="omfile" file="/var/log/mysql/mysql.log" template="FileFormat_sql" FileCreateMode="0644" FileGroup="adm")
          stop
        }
        if $syslogtag startswith '/etc/mysql/debian-start' then {
          action(type="omfile" file="/var/log/mysql/mysql.log" template="FileFormat_start" FileCreateMode="0644" FileGroup="adm")
          stop
        }
        if ($programname contains 'mysql' or $programname contains 'mariadb') and ($syslogseverity-text == 'error' or $msg contains_i '[ERROR]') then {
          action(type="omfile" file="/var/log/mysql/error.log" template="FileFormat_sql_error" FileCreateMode="0644" FileGroup="adm")
          stop
        }
        if ($programname contains 'mysql' or $programname contains 'mariadb') and ($syslogseverity-text == 'warning' or $msg contains_i '[Warning]' or $msg contains_i '[Error]') then {
          action(type="omfile" file="/var/log/mysql/error.log" template="FileFormat_sql_warning" FileCreateMode="0644" FileGroup="adm")
          stop
        }
    ignore_errors: yes

  - name: exec fpm
    replace:
      destfile: /etc/php/8.2/fpm/php.ini
      regexp: "^max_execution_time = (.*)"
      replace: "max_execution_time = 9999"
    ignore_errors: yes

  - name: memory fpm
    replace:
      destfile: /etc/php/8.2/fpm/php.ini
      regexp: "^memory_limit = (.*)"
      replace: "memory_limit = 512M"
    ignore_errors: yes


  - name: size fpm
    replace:
      destfile: /etc/php/8.2/fpm/php.ini
      regexp: "^upload_max_filesize = (.*)"
      replace: "upload_max_filesize = 400M"
    ignore_errors: yes

  - name: postsize fpm
    replace:
      destfile: /etc/php/8.2/fpm/php.ini
      regexp: "^post_max_size = (.*)"
      replace: "post_max_size = 400M"
    ignore_errors: yes


  - name: mysqli fpm
    replace:
      destfile: /etc/php/8.2/fpm/php.ini
      regexp: "^;mysqli.allow_local_infile = On"
      replace: "mysqli.allow_local_infile = On"
    ignore_errors: yes

  - name: phpuser
    replace:
      destfile: /etc/dbconfig-common/phpmyadmin.conf
      regexp: "^dbc_dbuser='phpmyadmin'"
      replace: "dbc_dbuser='root'"
    ignore_errors: yes

  - name: phppass
    replace:
      destfile: /etc/dbconfig-common/phpmyadmin.conf
      regexp: "^dbc_dbpass='(.*)'"
      replace: "dbc_dbpass='smarthome'"
    ignore_errors: yes

  - name: copy config
    command: /usr/sbin/dbconfig-generate-include /etc/dbconfig-common/phpmyadmin.conf /etc/phpmyadmin/config-db.php
    register: config

  - name: Make log dir
    file:
      path: /var/log/mysql/
      state: directory
      owner: mysql
      group: adm
      mode: 0755
      
  - name: create error.log
    file:
      path: /var/log/mysql/error.log
      state: touch
      owner: mysql
      group: adm
      mode: 0755
      
  - name: Restart nginx
    systemd: state=restarted name=nginx
    ignore_errors: yes

  - name: Restart php
    systemd: state=restarted name=php8.2-fpm
    ignore_errors: yes

  - name: disable mariadb
    systemd: enabled=no name=mariadb.service
