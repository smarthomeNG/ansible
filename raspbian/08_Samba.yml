---
- name: Install Samba
  hosts: image
  remote_user: root
  become_user: root
  become: true

  vars:
    ansible_python_interpreter: /usr/bin/python3
    samba_users:
      - name: smarthome
        password: smarthome

  tasks:
  - name: Create Group
    group:
      name: smarthome
      state: present

  - name: Create User
    user:
      name: smarthome
      shell: /bin/bash
      groups: smarthome
      append: no
      update_password: always
      password: ""
      comment: 'SmarthomeNG User'

  - name: Groups
    user:
      name: smarthome
      shell: /bin/bash
      groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
      append: yes

  - name: Install Samba
    apt: name=samba force=no state=latest

  - name: Copy config
    copy:
      dest: /etc/samba/smb.conf
      src: configs/samba.conf
      owner: smarthome
      group: smarthome
      mode: 0755

  - name: Create Samba users
    shell: >
      (pdbedit --user={{ item.name }} 2>&1 > /dev/null) \
      || (echo {{ item.password }}; echo {{ item.password }}) \
      | smbpasswd -s -a {{ item.name }}
    with_items: "{{ samba_users }}"
    register: create_user_output
    changed_when: "'Added user' in create_user_output.stdout"

  - name: Change smbd_service
    replace:
      destfile: /lib/systemd/system/smbd.service
      regexp: "PIDFile=/var/run/samba/smbd.pid"
      replace: "PIDFile=/run/samba/smbd.pid"

  - name: Change nmbd_service
    replace:
      destfile: /lib/systemd/system/nmbd.service
      regexp: "PIDFile=/var/run/samba/nmbd.pid"
      replace: "PIDFile=/run/samba/nmbd.pid"

  - name: logfile
    blockinfile:
      path: "/etc/rsyslog.d/samba.conf"
      create: yes
      block: |
        template(name="samba_format" type="string" string= "%TIMESTAMP% %HOSTNAME% %syslogtag% %pri-text:R,ERE,1,FIELD:daemon.(.*)--end%%msg:R,ERE,1,FIELD:^[ \t]*(.*)$--end:sp-if-no-1st-sp%%msg:R,ERE,1,FIELD:^[ \t]*(.*)$--end:drop-last-lf%\n")
        if ($programname == 'nmbd' or $programname startswith 'smbd') and ($msg contains '../lib/' or $msg contains '../source' or $msg contains '../librpc' or $msg contains '../libcli/') then {
          stop
        }
        if $syslogfacility-text == 'daemon' and ($programname == 'smbd' or $msg contains 'Samba' or $programname == 'smbd_audit') then {
          action(type="omfile" file="/var/log/samba.log" template="samba_format" FileCreateMode="0644" FileGroup="adm")
          stop
        }
        if $programname == 'nmbd' then {
          action(type="omfile" file="/var/log/samba.log" template="samba_format" FileCreateMode="0644" FileGroup="adm")
          stop
        }
    ignore_errors: yes

  - name: Copy logrotate
    copy:
      src: configs/logrotate_samba
      dest: /etc/logrotate.d/samba
      mode: 0644

  - name: Restart smbd
    systemd: daemon_reload=yes state=restarted name=smbd
    notify: Enable smbd

  handlers:
    - name: Enable smbd
      systemd: enabled=yes name=smbd
